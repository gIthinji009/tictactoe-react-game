{"ast":null,"code":"var _jsxFileName = \"/home/laban/Documents/ReactTicTacToe/src/components/board/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Square from \"../squares/Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board({\n  title,\n  color\n}) {\n  _s();\n  // Create a state which will tag the 9 squares as array items thus giving index positions\n  // Empty squares will be tagged as null\n  // Clicked squares will either be X or O\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n  // Define a state to keep track of the player\n  const [isNext, setIsNext] = useState(true);\n  const WIN_CONDITIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  const checkWinner = board => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [a, b, c] = WIN_CONDITIONS[i];\n      if (board[a] && board[a] === board[b] && board[b] === board[c]) {\n        return board[a];\n      }\n    }\n    return null;\n  };\n\n  // This function should create a copy of our squares array.\n  // We can create copies of arrays using array spreading or array.map()\n  // Then, this method utilizes the copy to add the value (X or O) to the clicked square.\n  // If the value is added, we then need to inform React that our component has an update by updating the state.\n  function handleClick(i) {\n    // Returning early to stop overwriting if a square is already clicked.\n    if (squares[i] || checkWinner(squares)) {\n      return;\n    }\n\n    // Copy the squares array using array spreading\n    const nextSquares = [...squares];\n\n    // Switching players\n    nextSquares[i] = isNext ? \"X\" : \"O\";\n\n    // Update the state with the new squares array and switch the player\n    setSquares(nextSquares);\n    setIsNext(!isNext);\n  }\n  const winner = checkWinner(squares);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        color: color\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Winner: ${winner}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"qpuhZ2Di1tT00uDUNz4u+YtcmYI=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Square","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","title","color","_s","squares","setSquares","Array","fill","isNext","setIsNext","WIN_CONDITIONS","checkWinner","board","i","length","a","b","c","handleClick","nextSquares","winner","children","style","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onSquareClick","_c","$RefreshReg$"],"sources":["/home/laban/Documents/ReactTicTacToe/src/components/board/Board.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Square from \"../squares/Square\";\n\nexport default function Board({ title, color }) {\n  // Create a state which will tag the 9 squares as array items thus giving index positions\n  // Empty squares will be tagged as null\n  // Clicked squares will either be X or O\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n  // Define a state to keep track of the player\n  const [isNext, setIsNext] = useState(true);\n\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  const checkWinner = (board) => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [a, b, c] = WIN_CONDITIONS[i];\n      if (board[a] && board[a] === board[b] && board[b] === board[c]) {\n        return board[a];\n      }\n    }\n    return null;\n  };\n\n  // This function should create a copy of our squares array.\n  // We can create copies of arrays using array spreading or array.map()\n  // Then, this method utilizes the copy to add the value (X or O) to the clicked square.\n  // If the value is added, we then need to inform React that our component has an update by updating the state.\n  function handleClick(i) {\n    // Returning early to stop overwriting if a square is already clicked.\n    if (squares[i] || checkWinner(squares)) {\n      return;\n    }\n\n    // Copy the squares array using array spreading\n    const nextSquares = [...squares];\n\n    // Switching players\n    nextSquares[i] = isNext ? \"X\" : \"O\";\n\n    // Update the state with the new squares array and switch the player\n    setSquares(nextSquares);\n    setIsNext(!isNext);\n  }\n\n  const winner = checkWinner(squares);\n\n  return (\n    <>\n      <h4 style={{ color: color }}>{title}</h4>\n\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n\n      {winner && <p>{`Winner: ${winner}`}</p>}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}